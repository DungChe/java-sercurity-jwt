-- Xóa các bảng nếu chúng đã tồn tại
DROP TABLE IF EXISTS ratings CASCADE;
DROP TABLE IF EXISTS quotations CASCADE;
DROP TABLE IF EXISTS maintenance CASCADE;
DROP TABLE IF EXISTS orders CASCADE;
DROP TABLE IF EXISTS black_list_token CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS roles CASCADE;

-- Tạo bảng roles
CREATE TABLE roles
(
    role_id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name    VARCHAR(255) UNIQUE NOT NULL
);

-- Tạo bảng users
CREATE TABLE users
(
    user_id      BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username     VARCHAR(255),
    email        VARCHAR(255) UNIQUE NOT NULL,
    phone        VARCHAR(255),
    password     VARCHAR(255) NOT NULL,
    role_id      BIGINT NOT NULL,
    created_date DATE,
    otp_code     VARCHAR(255),
    dob          DATE,
    status       VARCHAR(255) NOT NULL,
    CONSTRAINT FK_USERS_ON_ROLE FOREIGN KEY (role_id) REFERENCES roles (role_id)
);

-- Tạo bảng orders
CREATE TABLE orders
(
    order_id       BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title          VARCHAR(255),
    order_number   VARCHAR(255),
    phone          VARCHAR(255),
    design_details VARCHAR(255),
    user_id        BIGINT,
    address        VARCHAR(255),
    service_type   SMALLINT,
    start_date     DATE,
    end_date       DATE,
    status         SMALLINT,
    CONSTRAINT FK_ORDERS_ON_USER FOREIGN KEY (user_id) REFERENCES users (user_id)
);

-- Tạo bảng maintenance
CREATE TABLE maintenance
(
    maintenanceid      BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title              VARCHAR(255),
    order_id           BIGINT UNIQUE,
    price              VARCHAR(255),
    user_id            BIGINT,
    construction_staff VARCHAR(255),
    start_date         DATE,
    end_date           DATE,
    content            VARCHAR(255),
    CONSTRAINT FK_MAINTENANCE_ON_ORDER FOREIGN KEY (order_id) REFERENCES orders (order_id),
    CONSTRAINT FK_MAINTENANCE_ON_USER FOREIGN KEY (user_id) REFERENCES users (user_id)
);

-- Tạo bảng quotations
CREATE TABLE quotations
(
    quotation_id        BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    quotation_number    VARCHAR(255) NOT NULL,
    user_id             BIGINT NOT NULL,
    order_id            BIGINT UNIQUE,
    area_size           DOUBLE PRECISION NOT NULL,
    location            VARCHAR(255),
    design_details      VARCHAR(255),
    material_cost       DOUBLE PRECISION NOT NULL,
    labor_cost          DOUBLE PRECISION NOT NULL,
    transportation_cost DOUBLE PRECISION NOT NULL,
    total_cost          DOUBLE PRECISION NOT NULL,
    payment_method      VARCHAR(255) NOT NULL,
    quotation_date      DATE,
    status              VARCHAR(255),
    expiration_date     DATE NOT NULL,
    CONSTRAINT FK_QUOTATIONS_ON_ORDER FOREIGN KEY (order_id) REFERENCES orders (order_id),
    CONSTRAINT FK_QUOTATIONS_ON_USER FOREIGN KEY (user_id) REFERENCES users (user_id)
);

-- Tạo bảng ratings
CREATE TABLE ratings
(
    rating_id  BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    service_id BIGINT,
    user_id    BIGINT,
    rating     INTEGER NOT NULL,
    feedback   VARCHAR(255),
    CONSTRAINT FK_RATINGS_ON_SERVICE FOREIGN KEY (service_id) REFERENCES orders (order_id),
    CONSTRAINT FK_RATINGS_ON_USER FOREIGN KEY (user_id) REFERENCES users (user_id)
);

-- Tạo bảng black_list_token
CREATE TABLE black_list_token
(
    id          BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    token       VARCHAR(255) NOT NULL UNIQUE,
    expiry_date TIMESTAMP WITHOUT TIME ZONE NOT NULL
);

-- Chèn dữ liệu vào bảng roles
INSERT INTO roles (name) VALUES
                             ('ROLE_ADMIN'),
                             ('ROLE_USER'),
                             ('ROLE_CONSULTING_STAFF'),
                             ('ROLE_DESIGN_STAFF'),
                             ('ROLE_CONSTRUCTION_STAFF'),
                             ('ROLE_MANAGER');
